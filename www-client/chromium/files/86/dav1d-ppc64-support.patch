From adbd978bfdd94886d52ee6ddb2cea269fd9bb802 Mon Sep 17 00:00:00 2001
From: Georgy Yakovlev <gyakovlev@gentoo.org>
Date: Sun, 19 Apr 2020 12:28:45 -0700
Subject: [PATCH] dav1d ppc64 support

Signed-off-by: Georgy Yakovlev <gyakovlev@gentoo.org>
---
 third_party/dav1d/BUILD.gn                    | 21 +++++++++++
 third_party/dav1d/config/linux/ppc64/config.h | 35 +++++++++++++++++++
 third_party/dav1d/dav1d_generated.gni         |  5 +++
 third_party/dav1d/generate_source.py          |  3 +-
 4 files changed, 63 insertions(+), 1 deletion(-)
 create mode 100644 third_party/dav1d/config/linux/ppc64/config.h

diff --git a/third_party/dav1d/BUILD.gn b/third_party/dav1d/BUILD.gn
index 6e37707..33d4d15 100644
--- a/third_party/dav1d/BUILD.gn
+++ b/third_party/dav1d/BUILD.gn
@@ -182,6 +182,8 @@ static_library("dav1d_8bit") {
     sources += arm_template_sources
   } else if (current_cpu == "arm64") {
     sources += arm_template_sources
+  } else if (current_cpu == "ppc64") {
+    sources += ppc64_template_sources
   }
 
   cflags = dav1d_copts
@@ -210,6 +212,8 @@ static_library("dav1d_10bit") {
     sources += arm_template_sources
   } else if (current_cpu == "arm64") {
     sources += arm_template_sources
+  } else if (current_cpu == "ppc64") {
+    sources += ppc64_template_sources
   }
 
   cflags = dav1d_copts
@@ -249,6 +253,21 @@ if (current_cpu == "x86" || current_cpu == "x64") {
       ":dav1d_config",
     ]
 
+    cflags = dav1d_copts
+  }
+} else if (current_cpu == "ppc64") {
+  static_library("dav1d_ppc") {
+    sources = [
+      "libdav1d/src/ppc/cpu.c",
+      "libdav1d/src/ppc/cpu.h",
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [
+      "//build/config/compiler:no_chromium_code",
+      ":dav1d_config",
+    ]
+
     cflags = dav1d_copts
   }
 }
@@ -278,5 +297,7 @@ static_library("dav1d") {
     }
   } else if (current_cpu == "arm" || current_cpu == "arm64") {
     deps += [ ":dav1d_arm" ]
+  } else if (current_cpu == "ppc64") {
+    deps += [ ":dav1d_ppc" ]
   }
 }
diff --git a/third_party/dav1d/config/linux/ppc64/config.h b/third_party/dav1d/config/linux/ppc64/config.h
new file mode 100644
index 0000000..f6ca57f
--- /dev/null
+++ b/third_party/dav1d/config/linux/ppc64/config.h
@@ -0,0 +1,35 @@
+/*
+ * Autogenerated by the Meson build system.
+ * Do not edit, your changes will be lost.
+ */
+
+#pragma once
+
+#define ARCH_AARCH64 0
+
+#define ARCH_ARM 0
+
+#define ARCH_PPC64LE 1
+
+#define ARCH_X86 0
+
+#define ARCH_X86_32 0
+
+#define ARCH_X86_64 0
+
+#define CONFIG_16BPC 1
+
+#define CONFIG_8BPC 1
+
+#define CONFIG_LOG 1
+
+#define ENDIANNESS_BIG 0
+
+#define HAVE_ASM 1
+
+#define HAVE_GETAUXVAL 1
+
+#define HAVE_POSIX_MEMALIGN 1
+
+#define HAVE_UNISTD_H 1
+
diff --git a/third_party/dav1d/dav1d_generated.gni b/third_party/dav1d/dav1d_generated.gni
index e32f0e4..09007bd 100644
--- a/third_party/dav1d/dav1d_generated.gni
+++ b/third_party/dav1d/dav1d_generated.gni
@@ -61,6 +61,11 @@ arm_template_sources = [
   "libdav1d/src/arm/mc_init_tmpl.c",
 ]
 
+ppc64_template_sources = [
+  "libdav1d/src/ppc/cdef_init_tmpl.c",
+  "libdav1d/src/ppc/looprestoration_init_tmpl.c",
+]
+
 template_sources = [
   "libdav1d/src/cdef_apply_tmpl.c",
   "libdav1d/src/cdef_tmpl.c",
diff --git a/third_party/dav1d/generate_source.py b/third_party/dav1d/generate_source.py
index 9ab5e00..ad3feff 100755
--- a/third_party/dav1d/generate_source.py
+++ b/third_party/dav1d/generate_source.py
@@ -50,7 +50,8 @@ def WriteGn(fd):
   WriteArray(fd, "arm32_asm_sources", glob.glob("libdav1d/src/arm/32/*.S"))
   WriteArray(fd, "arm64_asm_sources", glob.glob("libdav1d/src/arm/64/*.S"))
   WriteArray(fd, "arm_template_sources", glob.glob("libdav1d/src/arm/*_tmpl.c"))
-
+  WriteArray(fd, "ppc64_template_sources", glob.glob("libdav1d/src/ppc/*_tmpl.c"))
+ 
   template_sources = glob.glob("libdav1d/src/*_tmpl.c")
   WriteArray(fd, "template_sources", template_sources)
 
-- 
2.26.1

